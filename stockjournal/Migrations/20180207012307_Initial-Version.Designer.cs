// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using StockJournal.Data;
using System;

namespace StockJournal.Migrations
{
    [DbContext(typeof(StockContext))]
    [Migration("20180207012307_Initial-Version")]
    partial class InitialVersion
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("StockJournal.Models.CashTrans", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Amount");

                    b.Property<int>("StockUserId");

                    b.Property<DateTime>("TransDate");

                    b.Property<string>("TransType");

                    b.HasKey("Id");

                    b.HasIndex("StockUserId");

                    b.ToTable("Cash");
                });

            modelBuilder.Entity("StockJournal.Models.StockTrans", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Amount");

                    b.Property<int>("NumShares");

                    b.Property<string>("StockName");

                    b.Property<int>("StockUserId");

                    b.Property<double>("StopLoss");

                    b.Property<string>("Ticker");

                    b.Property<DateTime>("TransDate");

                    b.Property<string>("TransType");

                    b.HasKey("Id");

                    b.HasIndex("StockUserId");

                    b.ToTable("Stock");
                });

            modelBuilder.Entity("StockJournal.Models.StockUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("FName")
                        .IsRequired();

                    b.Property<string>("LName")
                        .IsRequired();

                    b.Property<double>("TotCash");

                    b.Property<double>("TotEquity");

                    b.Property<double>("TotPortfolio");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("StockJournal.Models.CashTrans", b =>
                {
                    b.HasOne("StockJournal.Models.StockUser", "StockUser")
                        .WithMany()
                        .HasForeignKey("StockUserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StockJournal.Models.StockTrans", b =>
                {
                    b.HasOne("StockJournal.Models.StockUser", "StockUser")
                        .WithMany("Answers")
                        .HasForeignKey("StockUserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
